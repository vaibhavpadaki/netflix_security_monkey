# Docker for SecurityMonkey
# Author : Nag
FROM ubuntubase:0.1

#Run as postgres user
# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres

# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.

RUN /etc/init.d/postgresql start &&\
    psql --command "ALTER USER postgres with PASSWORD 'securitymonkeypassword'; " &&\
    psql --command "CREATE DATABASE \"secmonkey\";" &&\
    psql --command "CREATE ROLE \"securitymonkeyuser\" LOGIN PASSWORD 'securitymonkeypassword';" &&\
    psql --command "CREATE SCHEMA secmonkey ;" &&\
    psql --command "GRANT Usage, Create ON SCHEMA \"secmonkey\" TO \"securitymonkeyuser\"; " &&\
    psql --command "set timezone TO 'GMT';" &&\
    psql --command "select now();" &&\
    echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/9.6/main/pg_hba.conf &&\
    echo "listen_addresses='*'" >> /etc/postgresql/9.6/main/postgresql.conf

# Expose the PostgreSQL port
EXPOSE 5432
EXPOSE 443

# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  ["/etc/postgresql", "/var/log/postgresql", "/var/lib/postgresql"]

USER root
#RUN useradd -d /home/ubuntu -m -s /bin/bash ubuntu &&\
#    git clone https://github.com/Netflix/security_monkey.git /home/ubuntu/security_monkey &&\
#    cd /home/ubuntu/security_monkey && python setup.py install
RUN useradd -d /home/ubuntu -m -s /bin/bash ubuntu
RUN git clone --depth 1 --branch master https://github.com/Netflix/security_monkey.git /usr/local/src/security_monkey
RUN chown -R `whoami`:www-data /usr/local/src/security_monkey
RUN  cd /usr/local/src/security_monkey
RUN  virtualenv venv
RUN /bin/bash -c 'source venv/bin/activate && pip install --upgrade setuptools && pip install --upgrade pip' 
#RUN pip install --upgrade setuptools && pip install --upgrade pip 
RUN  cd /usr/local/src/security_monkey && python setup.py install

ADD config-deploy.py /usr/local/src/security_monkey/env-config/
ENV SECURITY_MONKEY_SETTINGS /usr/local/src/security_monkey/env-config/config-deploy.py

ADD security_monkey.conf /usr/local/src/security_monkey/supervisor/
ADD securitymonkey.conf /etc/nginx/sites-available/
ADD securitymonkey.sh /usr/local/src/
ADD static.tar /usr/local/src/security_monkey/security_monkey/
#ADD config-deploy.py /usr/local/src/security_monkey/env-config/
#CMD /usr/local/src/securitymonkey.sh
